Today's Topics
More Features of enum
Wrapper classes
HAS-A relationship
Nested classes 
Generics

Revise enum
eg :
public enum Color
{RED,GREEN,BLUE}

What is it ? : keyword to represent set of related self typed constants.
It's a special class generated by javac that implicitly extends from --- java.lang.Enum


Access specifier of the Implicitly added  constructor :private
which are the args of the ctor : name , ordinal
1st n only statement in the ctor : super(name,ordinal)

Data Members : public static final Color RED,GREEN,BLUE;


Important Methods : 
Inherited from Enum : public String name()
public int ordinal()
public String toString() 
....
+ javac synthesized methods
1. public static Color[] values()
2. public static Color valueOf(String name) throws IllegalArgumentException : unchked exc
eg : sop("Choose color");
Color c=Color.valueOf(sc.next().toUpperCase());//green => no exc  / yellow => exc


static init block : YES
static {
 RED=new Color("RED",0);
GREEN=new Color("GREEN",1);
BLUE=new Color("BLUE",2);
}

Which methods can be overridden ? : toString
inherited version : rets name()

Which methods can not be overridden? : name(), ordinal(),equals(), compareTo()

Which i/fs it implements  ? Serializable , Comparable
eg :
public enum Color
{RED,GREEN,BLUE}
In a Tester class : 
import static com.app.core.Color.*;
sop(RED.compareTo(BLUE));//what will be the answer ? -1

Can you add enum nested within a class or interface ? YES (implicitly it's treated as static member)
eg : class Vehicle
{
  ....
private Color clr;
    enum Color
  {RED,GREEN,BLUE}
}

How to access BLUE ? Vehicle.Color.BLUE

Can you add , additional state , constructor , methods to the enum ? : YES
eg : Customer HAS-A CustomerPlan / CustomerType that needs specific reg amount. Can you associate reg amount easily with the plan ? YESS
SILVER : reg amount 500
GOLD : 1000
DIAMOND : 1500
PLATINUM : 2000

Can you add a validation rule , to check if customer has paid correct reg amount for the selected plan ?


1.5 Wrappers

2. Establish HAS-A relation between 
Vehicle & DeliveryAddress
(one to one association)

Steps
1. Create a separate class : DeliveryAddress -- city,state,country,zipCode
constr , toString

2. To establish association(containment) between Vehicle & DeliveryAddress 
Add new state (instance var) : DeliveryAddress  
Don't init it in the constr.(since delivery address should be assigned when customer purchases a vehicle)

3. Add a method to link delivery address to a vehicle.

4. Write a simple tester to test this form of association.
Confirm :In this case ,  can a DeliveryAddress exist w/o a Vehicle ?
If yes : how will you prevent it ?


Enter Nested classes


5. Add Option in Tester
Purchase Vehicle
i/p : vehicle's chasis no 
In case of valid chasis no , if the vehicle is not already sold , accept delivery address details & assign it to the vehicle.
o/p : in case of invalid chasis no or vehicle already sold --throw custom exc
o.w : assign delivery address &  give success message.

6. Discuss rules of non static nested class (inner class)

7. wrapper classes

8. Generics

----------------------
12345 red 45678 2-6-2021 ev
pune mh in 435467

